# Generated by Django 5.1.2 on 2024-10-25 17:40

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('user_name', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='max length is 15-numbers and Letters', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Enter a valid registration number in the format AbC123.', regex='^[a-zA-Z]{3}\\d{3}$')], verbose_name='uder name')),
                ('phone_number', models.IntegerField(blank=True, error_messages={'unique': 'enter valid phone number'}, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+989123456789'. Up to 10 digits allowed after the country code", regex='^\\+98[0-9]{10}$')], verbose_name='mobile number')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site. ', verbose_name='is staff')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
